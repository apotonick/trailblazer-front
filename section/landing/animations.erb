<section class="bg-bg-blue pt-20 pb-32 px-10">
  <h2 class="section-header text-white font-bold text-4xl lg:text-6xl">
    We streamline
    <span class="text-purple-text">code organization</span>
  </h2>
  <p class="text-white text-lg text-center mt-10 mx-auto max-w-[45rem]">
    <span class="font-bold uppercase text-purple-text">Trailblazer</span>
    is a framework-agnostic set of gems helping to improve your app's code structure.
    It is used in hundreds of commercial Rails apps and was often introduced later on, after many years of extensive development, to reduce technical debt.

  </p>
  <div class="max-w-[63rem] section-content-wrapper md:py-0">
    <div class="md:text-left md:flex-row md:justify-between md:mt-[5.5rem] flex flex-col mt-10 text-center">
      <div class="order-last w-full mt-10 mx-auto md:order-none md:mt-0 md:mx-0">
        <lottie-player src="<%= asset_path "lottie/1-A.json" %>" background="transparent" speed="4" class="" loop autoplay></lottie-player>
      </div>

      <%#= image_tag "code_placeholder_3.jpg", class: "order-last w-full h-fit mt-10 mx-auto max-w-[22rem] lg:max-w-[27rem] md:order-none md:mt-0 md:mx-0" %>
      <div class="md:max-w-[28rem] flex flex-col">
        <div class="text-white">
          <h3 class="lg:text-3xl font-bold text-3xl">
            <span class="text-purple-text">Missing</span>
            abstractions
          </h3>
          <p class="mt-4 text-lg lg:mt-5">
            Most web frameworks have excellent abstractions for routing, rendering, and databases.
            When it comes to organizing <span class="font-bold uppercase text-purple-text">business logic</span>, however, you're left alone.
          </p>
          <p class="mt-4 text-lg lg:mt-5">
            The existing places, such as controller actions, models, callbacks and hand-tailored service objects, lead to codebases hard to maintain.
          </p>
        </div>
      </div>
    </div>

    <div class="md:text-left md:flex-row md:justify-between md:mt-[5.5rem] flex flex-col mt-10 text-center">
      <div class="md:max-w-[28rem] flex flex-col">
        <div class="text-white">
          <h3 class="lg:text-3xl font-bold text-3xl">
            <span class="text-purple-text">Our</span>
            toolbox
          </h3>
          <p class="mt-4 text-lg lg:mt-5">
            Instead of cluttering your code over the entire MVC framework,
            <span class="font-bold uppercase text-purple-text">Trailblazer</span> introduces a bunch of new abstractions, with a standard service object leading the way: the operation.
          </p>

          <p class="mt-4 text-lg lg:mt-5">
            Code is organized into small chunks we call <i>steps</i>. The operation helps to structure your logic and takes over flow control.
          </p>
        </div>
      </div>
      <div class="order-last w-full mt-10 mx-auto md:order-none md:mt-0 md:mx-0">
        <lottie-player src="<%= asset_path "lottie/2-A.json" %>" background="transparent" speed="4" class="" loop autoplay></lottie-player>
      </div>
    </div>

    <div class="md:text-left md:flex-row md:justify-between md:mt-[5.5rem] flex flex-col mt-10 text-center">
      <div class="order-last h-[22rem] mt-10 mx-auto md:order-none md:mt-0 md:mx-0">
        <lottie-player src="<%= asset_path "lottie/3-A.json" %>" background="transparent" speed="3" class="" loop autoplay></lottie-player>
      </div>

      <%#= image_tag "code_placeholder_3.jpg", class: "order-last w-full h-fit mt-10 mx-auto max-w-[22rem] lg:max-w-[27rem] md:order-none md:mt-0 md:mx-0" %>
      <div class="md:max-w-[28rem] flex flex-col">
        <div class="text-white">
          <h3 class="lg:text-3xl font-bold text-3xl">
            <span class="text-purple-text">Bullet-proof</span>
            conventions
          </h3>
          <p class="mt-4 text-lg lg:mt-5">
            While you can focus on developing your app and writing code that matters,
            <span class="font-bold uppercase text-purple-text">Trailblazer</span> gives you automatic error handling by letting you apply the Railway pattern to your logic.

          </p>
          <p class="mt-4 text-lg lg:mt-5">
            This not only saves you tons of <code class="text-purple-text font-bold">if</code> and <code class="text-purple-text font-bold">else</code>s but provides clever ways to reuse huge parts of your code by supplying inheritance and composition mechanics to structure your application.
          </p>
        </div>
      </div>
    </div>
  </div>

  <%= link_to "Learn about operations", "/2.1/docs/operation/index.html", class: "base-button bg-purple hover:bg-light-purple hover:text-blue text-white mt-15 mx-auto" %>
</section>
